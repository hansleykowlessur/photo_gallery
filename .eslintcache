[{"C:\\react_photo\\photo_gallery\\src\\reportWebVitals.js":"1","C:\\react_photo\\photo_gallery\\src\\App.js":"2","C:\\react_photo\\photo_gallery\\src\\components\\Main.js":"3"},{"size":362,"mtime":1606389765762,"results":"4","hashOfConfig":"5"},{"size":578,"mtime":1609687938439,"results":"6","hashOfConfig":"5"},{"size":5069,"mtime":1609687926630,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12z0ikv",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\react_photo\\photo_gallery\\src\\reportWebVitals.js",[],"C:\\react_photo\\photo_gallery\\src\\App.js",["15"],"C:\\react_photo\\photo_gallery\\src\\components\\Main.js",["16","17","18","19","20","21","22","23"],"import React , {useState}from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from '@material-ui/core';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createApi } from 'unsplash-js';\r\n\r\nconst unsplash = new createApi({\r\n  accessKey: \"aMzFzF2XlDbOG0MemWppQGBRCyvxnclIttjNrssmA5k\"\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n     display: 'flex',\r\n     flexWrap: 'wrap',\r\n     justifyContent: 'space-around',\r\n     overflow: 'hidden',\r\n     backgroundColor: theme.palette.background.paper,\r\n   },\r\n   gridList: {\r\n     width: 500,\r\n     height: 450,\r\n   },\r\n   icon: {\r\n     color: 'rgba(255, 255, 255, 0.54)',\r\n   },\r\n}));\r\n\r\n\r\nexport default function Main() {\r\n  const classes = useStyles();\r\n// query being queried\r\nconst [query, setQuery] = useState('');\r\n//Object where the api content is saved\r\nconst [finalText, setFinalText] = useState(null);\r\n//Error message being returned to the user\r\nconst [errorMessage, setErrorMessage] = useState('');\r\n//Check response status code\r\nconst [responseFromAPI, setResponseFromAPI] = useState(true);\r\nconst onSubmit = (e) => {\r\n\r\n  e.preventDefault();\r\n  const isValid = formValidation();\r\n  // Use to check if response was initially error then was correct\r\n  setResponseFromAPI(true);\r\n\r\n  if (isValid){\r\n    const result = fetch(`https://api.unsplash.com/search/photos/?page=1&per_page=5&orientation=landscape&query=${query}&client_id=aMzFzF2XlDbOG0MemWppQGBRCyvxnclIttjNrssmA5k`)\r\n      .then(res => {\r\n        // Check status\r\n        if(res.status === 200){\r\n          return res.json()\r\n        } else if(res.status ===404){\r\n          setErrorMessage('City not found')\r\n          setResponseFromAPI(false)\r\n          setFinalText(null)\r\n        } else {\r\n          setErrorMessage('City not found')\r\n          setResponseFromAPI(false)\r\n          setFinalText(null)\r\n        }\r\n      })\r\n      .then(contents =>  setFinalText(contents))\r\n      .catch(error => console.log(false));\r\n    setErrorMessage('');\r\n  }else {\r\n    setErrorMessage(\"Don't submit blank field\");\r\n    setFinalText(null);\r\n  }\r\n\r\n}\r\n\r\nconst formValidation = () => {\r\n  let isValid = true;\r\n  if(query.length <= 0 ){\r\n    isValid = false;\r\n  }else{\r\n    isValid = true;\r\n  }\r\n  return isValid;\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <form onSubmit={onSubmit}>\r\n              <Grid container align='center'>\r\n                  <Grid item xs={12}>\r\n                    <TextField id=\"outlined-basic\" label=\"Search an Image\" variant=\"outlined\" onChange= {(e)=>(setQuery(e.target.value))} />\r\n\r\n                  </Grid>\r\n                  <Grid item/>\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"primary\" type='submit'>\r\n                    Submit\r\n                    </Button>\r\n                  </Grid>\r\n              </Grid>\r\n            <p> {errorMessage} </p>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {\r\n            responseFromAPI ? (\r\n              <Paper className={classes.paper}>\r\n                <Grid container>\r\n                    <Grid item xs={4}>\r\n                    <Typography variant=\"h4\"> {finalText ? <img src= {finalText.results[0].urls.small} alt='Icon'/> : null}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                    <Typography variant=\"h4\"> {finalText ? <img src= {finalText.results[1].urls.small} alt='Icon'/> : null}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                    <Typography variant=\"h4\"> {finalText ? <img src= {finalText.results[2].urls.small} alt='Icon'/> : null}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography variant=\"h4\"> {finalText ? <img src= {finalText.results[3].urls.small} alt='Icon'/> : null}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography variant=\"h4\"> {finalText ? <img src= {finalText.results[4].urls.small} alt='Icon'/> : null}</Typography>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            ) : null\r\n          }\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"24","severity":1,"message":"25","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":4,"column":8,"nodeType":"26","messageId":"27","endLine":4,"endColumn":16},{"ruleId":"24","severity":1,"message":"29","line":5,"column":8,"nodeType":"26","messageId":"27","endLine":5,"endColumn":20},{"ruleId":"24","severity":1,"message":"30","line":6,"column":8,"nodeType":"26","messageId":"27","endLine":6,"endColumn":23},{"ruleId":"24","severity":1,"message":"31","line":7,"column":8,"nodeType":"26","messageId":"27","endLine":7,"endColumn":21},{"ruleId":"24","severity":1,"message":"32","line":8,"column":8,"nodeType":"26","messageId":"27","endLine":8,"endColumn":18},{"ruleId":"24","severity":1,"message":"33","line":9,"column":8,"nodeType":"26","messageId":"27","endLine":9,"endColumn":16},{"ruleId":"24","severity":1,"message":"34","line":17,"column":7,"nodeType":"26","messageId":"27","endLine":17,"endColumn":15},{"ruleId":"24","severity":1,"message":"35","line":57,"column":11,"nodeType":"26","messageId":"27","endLine":57,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'ListSubheader' is defined but never used.","'IconButton' is defined but never used.","'InfoIcon' is defined but never used.","'unsplash' is assigned a value but never used.","'result' is assigned a value but never used."]